from collections import deque
initial_state = [1, 2, 3, 4, 5, 6, 7, 0, 8]
goal_state = [1, 2, 3, 4, 5, 6, 7, 8, 0]
queue = deque([(initial_state, [initial_state])])
visited = set(tuple(initial_state))
while queue:
    state, path = queue.popleft()
    if state == goal_state:
        print("Solution found!")
        print("Path:", path)
        break
    for i in range(9):
        if state[i] == 0:
            for j in [(i-3), (i+3), (i-1), (i+1)]:
                if 0 <= j < 9 and abs(j-i) in [1, 3]:
                    new_state = list(state)
                    new_state[i], new_state[j] = new_state[j], new_state[i]
                    if tuple(new_state) not in visited:
                        queue.append((new_state, path + [new_state]))
                        visited.add(tuple(new_state))
